"rs4974 ", "rtc241 ", "sab850 ", "sak457 ", "sas976 ", "sc4097 ",
"scj278 ", "sdl373 ", "sds513 ", "sef398 ", "set309 ", "sh3762 ",
"shh401 ", "sk5171 ", "skh307 ", "skj254 ", "slq207 ", "sm5430 ",
"spb336", "sr3337 ", "SRK373", "ss5209 ", "ss7003 ", "ss8691 ",
"ss8794 ", "ssp332 ", "ssr359 ", "tg1300 ", "thg215 ", "tjm406 ",
"tnf210 ", "tvh222 ", "tw43 ", "tz460 ", "va663 ", "vazqui01 ",
"vb1027 ", "vlo210 ", "vpb221 ", "vs1147 ", "vs1493 ", "wj386 ",
"wjm335 ", "wk660 ", "wz801 ", "xl947 ", "ym1225 ", "yr626 ",
"ys1794 ", "yw1829 ", "yz2440 ", "zh693 ", "zmk225 ", "zn307 ",
"zp377 ", "zrk212 ", "zz389 "), class = "factor"), DistributionChannel
= structure(c(3L,
3L, 3L, 3L), .Label = c("anonymous", "Distribution Channel",
"email", "preview"), class = "factor"), `1516A_consent` =
structure(c(3L,
3L, 3L, 3L), .Label = c("Dear Capstone Student, Thank you so much for
participating in this survey! This questionnaire is part of a research
project to better understand teams at Wagner. Your participation will
help us enhance the Capstone experience as well as give us broader
insight into how teams function and what enables them to perform
better.\n\n\n\nThe survey should only take about 10 minutes to
complete. It asks you about your own attitudes and feelings related to
working and collaborating with others. Note that some items below use
the term \"social identity groups.\" This term refers to groups that
derive from societally-based identities such as, but not limited to,
race, ethnicity, religion, gender, social class, and sexual
orientation. Everyone is a member of multiple social identity groups.
\n\nThis survey is completely confidential. It is also completely
voluntary.  By scrolling further down this page and clicking on the
\"yes\" button, you are consenting to take this sur... <truncated>
"No", "Yes"), class = "factor"), `1516A_Q26` = structure(c(3L,
4L, 1L, 4L), .Label = c("Agree", "Disagree", "Neither Agree nor
Disagree",
"Strongly Agree", "Strongly Disagree", "The fact that members of my
team come from\ndifferent backgrounds and social identity groups will
make for a valuable\ncollaboration."
), class = "factor"), `1516A_Q27` = structure(c(1L, 5L, 4L, 5L
), .Label = c("Agree", "Disagree", "I am willing to listen to the
variety of views that can\nemerge in talking about social issues and
problems.",
"Neither Agree nor Disagree", "Strongly Agree", "Strongly Disagree"
), class = "factor")), .Names = c("1516_netID", "DistributionChannel",
"1516A_consent", "1516A_Q26", "1516A_Q27"), row.names = 2:5, class =
"data.frame"
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights\" from Nicholas Knauer'"
)
results <- search$Results()
results$Item(1)$ReceivedTime() # Received time of first search result
results <- search$Results()
Attachments.Count > 0
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights\" from Nicholas Knauer'"
)
results <- search$Results()
results$Item(1)$ReceivedTime() # Received time of first search result
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights1\" from Nicholas Knauer'"
)
results <- search$Results()
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date("2017-12-17")) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
data <- read.csv(attachment_file, skip = 10)
View(data)
install.packages('RDCOMClient')
library(RDCOMClient)
install.packages("RDCOMClient")
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights\" from Nicholas Knauer'"
)
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights2\" from Nicholas Knauer'"
)
results <- search$Results()
results$Item(1)$ReceivedTime() # Received time of first search result
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights3\" from Nicholas Knauer'"
)
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
# Iterates through results object to pull out all of the items
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date(Sys.Date())) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
data <- read.table(unz("94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.zip",
"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, nrows=10, header=T, quote="\"", sep=",")
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, nrows=10, header=T, quote="\"", sep=",")
View(data)
data1 <- read.table(unz(attachment_file), skip = 10, nrows=10, header=T, quote="\"", sep=",")
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights3\" from Nicholas Knauer'"
)
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
# Iterates through results object to pull out all of the items
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date(Sys.Date())) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, nrows=10, header=T, quote="\"", sep=",")
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights3\" from Nicholas Knauer'"
)
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
# Iterates through results object to pull out all of the items
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date(Sys.Date())) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, nrows=10, header=T, quote="\"", sep=",")
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights3\" from Nicholas Knauer'"
)
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
# Iterates through results object to pull out all of the items
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date(Sys.Date())) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, nrows=10, header=T, quote="\"", sep=",")
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), header=T, quote="\"", sep=",")
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, header=T, quote="\"", sep=",")
View(data)
str(data)
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights3\" from Nicholas Knauer'"
)
Sys.sleep(5) # Wait a hot sec!
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
# Iterates through results object to pull out all of the items
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date(Sys.Date())) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, header=T, quote="\"", sep=",")
##install.packages('RDCOMClient')
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights3\" from Nicholas Knauer'"
)
Sys.sleep(5) # Wait a hot sec!
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
# Iterates through results object to pull out all of the items
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date(Sys.Date())) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, header=T, quote="\"", sep=",")
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights3\" from Nicholas Knauer'"
)
Sys.sleep(5) # Wait a hot sec!
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
# Iterates through results object to pull out all of the items
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date(Sys.Date())) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, header=T, quote="\"", sep=",")
View(data)
test<-"20171217"
url <- paste0("94602_Nick_ACS_Brand_All_FloodLights_",
test, "_111320_653491298.csv")
url
csv_file <- paste0("94602_Nick_ACS_Brand_All_FloodLights_",
test, "_111320_653491298.csv")
data1 <- read.table(unz(attachment_file,csv_file), skip = 10, header=T, quote="\"", sep=",")
system_date<-Sys.Date()
system_date
gsub('\\$', '', '$5.00$')
gsub('-', '', system_date)
library(RDCOMClient)
outlook_app <- COMCreate("Outlook.Application")
search <- outlook_app$AdvancedSearch(
"Inbox",
"urn:schemas:httpmail:subject = 'DDM Report #107047216 : \"Nick_ACS_Brand_All_FloodLights3\" from Nicholas Knauer'"
)
Sys.sleep(5) # Wait a hot sec!
results <- search$Results() # Saves search results into results object
Sys.sleep(5) # Wait a hot sec!
results$Item(1)$ReceivedTime() # Received time of first search result
as.Date("1899-12-30") + floor(results$Item(1)$ReceivedTime()) # Received date
# Iterates through results object to pull out all of the items
for (i in 1:results$Count()) {
if (as.Date("1899-12-30") + floor(results$Item(i)$ReceivedTime())
== as.Date(Sys.Date())) {
email <- results$Item(i)
}
}
attachment_file <- tempfile()
email$Attachments(1)$SaveAsFile(attachment_file)
##Automatically Determine csv file name
system_date<-Sys.Date()
system_day_revised<-gsub('-', '', system_date)
csv_file <- paste0("94602_Nick_ACS_Brand_All_FloodLights_",
system_day_revised, "_111320_653491298.csv")
##Read CSV File
##data <- read.table(unz(attachment_file,"94602_Nick_ACS_Brand_All_FloodLights_20171217_111320_653491298.csv"), skip = 10, header=T, quote="\"", sep=",")
data1 <- read.table(unz(attachment_file,csv_file), skip = 10, header=T, quote="\"", sep=",")
View(data1)
library(readr)
data1 <- read_table(unz(attachment_file,csv_file), skip = 10, header=T, quote="\"", sep=",")
data1 <- read_table(unz(attachment_file,csv_file), skip = 10)
View(data1)
data1 <- read_table(attachment_file, skip = 10)
View(data1)
data1 <- read_table(attachment_file,csv_file), skip = 10)
data1 <- read_table(unz(attachment_file,csv_file), skip = 10)
spec(...)
spec()
spec(data1)
data1 <- read.table(unz(attachment_file,csv_file), skip = 10, header=T, quote="\"", sep=",")
View(data1)
library(dygraphs)
install.packages('dygraphs')
library(dygraphs)
dygraph(nhtemp, main = "New Haven Temperatures") %>%
dyShading(from = "1920-1-1", to = "1930-1-1") %>%
dygraph(nhtemp, main = "New Haven Temperatures") %>%
dyShading(from = "50", to = "50.1", axis = "y", color = "black")
data("nhtemp")
dygraph(nhtemp, main = "New Haven Temperatures") %>%
dyShading(from = "1920-1-1", to = "1930-1-1") %>%
dygraph(nhtemp, main = "New Haven Temperatures") %>%
dyShading(from = "50", to = "50.1", axis = "y", color = "black")
dygraph(nhtemp, main = "New Haven Temperatures") %>%
dyShading(from = "1920-1-1", to = "1930-1-1") %>%
dygraph(nhtemp, main = "New Haven Temperatures") %>%
dyShading(from = "50", to = "50.1", axis = "y", color = "black")
devtools::install_github("rstudio/keras")
install.packages('reticulate')
install.packages('tensorflow')
install.packages('reticulate')
install.packages("reticulate")
install.packages('tensorflow')
devtools::install_github("rstudio/keras")
library(keras)
install_keras()
library(keras)
mnist <- dataset_mnist()
install_keras()
install_keras()
library(keras)
mnist <- dataset_mnist()
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
x_train <- array_reshape(x_train, c(nrow(x_train), 784))
x_test <- array_reshape(x_test, c(nrow(x_test), 784))
# rescale
x_train <- x_train / 255
x_test <- x_test / 255
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu', input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = 'softmax')
summary(model)
model %>% compile(
loss = 'categorical_crossentropy',
optimizer = optimizer_rmsprop(),
metrics = c('accuracy')
)
history <- model %>% fit(
x_train, y_train,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
plot(history)
model %>% predict_classes(x_test)
library(fuzzyjoin)
date <- as.Date(c('2010-11-1', '2008-3-25', '2007-3-14'))
site <- c("abcejams.com", "reitimes.com", "posehbc")
df1 <- data.frame(date, site, stringsAsFactors = FALSE)
df1$site<-as.character(df1$site)
library(fuzzyjoin)
date <- as.Date(c('2010-11-1', '2008-3-25', '2007-3-14'))
site <- c("abcejams.com", "reitimes.com", "posehbc")
df1 <- data.frame(date, site, stringsAsFactors = FALSE)
date2 <- as.Date(c('2010-11-1', '2008-3-25', '2007-3-14', '2018-2-9'))
site2 <- c("jams", "time", "pose", "abce")
metric2 <- c(1, 2, 3, 4)
metric3 <- c(10, 20, 30, 40)
df2 <- data.frame(date2, site2, metric2, metric3, stringsAsFactors = FALSE)
regex_full_join(df1, df2, by = c("site" = "site2", "date" = "date2"))
library(stringi)
install.packages('stringi')
library(stringi)
date <- as.Date(c('2010-11-1', '2008-3-25', '2007-3-14'))
site <- c("abcejams.com", "reitimes.com", "posehbc")
df1 <- data.frame(date, site, stringsAsFactors = FALSE)
date2 <- as.Date(c('2010-11-1', '2008-3-25', '2007-3-14', '2018-2-9'))
site2 <- c("jams", "time", "pose", "abce")
metric2 <- c(1, 2, 3, 4)
metric3 <- c(10, 20, 30, 40)
df2 <- data.frame(date2, site2, metric2, metric3, stringsAsFactors = FALSE)
regex_full_join(df1, df2, by = c("site" = "site2", "date" = "date2"))
blogdown::install_hugo()
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
##install.packages('qpcR')
library(qpcR)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result<-qpcR:::cbind.na(ids, names, artists1)
##result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
final1<-final1[complete.cases(final1), ]
##Genius
client_id <- "3y_TtkyL_4l7CkeLVymC7_MKemb5Ik3A0XG9lxJ-y7Zav4b9gPXYzkbfmXfKm-V1"
client_secret <- "ff64O8-DpJYJlhVRszdxO1qnuX7VpL9tWSW33a3uwmPJp0LpbGDczK4PB6LMach_C6M-00-WPE9lwcV6zXo-DQ"
token <- "w3BQHoOssKNneb9agreuxcdnrDyxS7jRktAci6qzB5RKypgvH-DA5SvDI5bDzxAW"
HeaderValue = paste0('Bearer ', token)
response = POST(
'https://api.genius.com/token',
accept_json(),
authenticate(client_id, client_secret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
##token = content(response)$access_token
token <- "w3BQHoOssKNneb9agreuxcdnrDyxS7jRktAci6qzB5RKypgvH-DA5SvDI5bDzxAW"
HeaderValue = paste0('Bearer ', token)
final1$NAME_and_ARTISTS <- paste(final1$NAME,final1$`ARTIST NAME`,sep = " ")
final1$NAME_and_ARTISTS<-gsub(" ", "%20", final1$NAME_and_ARTISTS, fixed=TRUE)
##final1$V8<-NULL
for(i in 1:length(final1[,5])) {
audioFeaturesURL <- paste("https://api.genius.com/search?q=",
final1[i,5],
sep="")
getaudioFeatures <- GET(audioFeaturesURL, add_headers(Authorization = HeaderValue))
audioFeatures <- jsonlite::fromJSON(toJSON(content(getaudioFeatures)))
answer <- unlist(audioFeatures$response$hits$result$url[1], use.names=FALSE)
answer1 <- ifelse(is.null(answer), "No Lyrics", answer)
answer2 <- unlist(audioFeatures$response$hits$result$primary_artist$id[1], use.names=FALSE)
answer3 <- ifelse(is.null(answer2), "No Lyrics", answer2)
final1[i,6] <- answer1
final1[i,7] <- answer3
}
##ARTIST ID
for(i in 1:length(final1[,7])) {
audioFeaturesURL <- paste("https://api.genius.com/artists/",
final1[i,7],
sep="")
getaudioFeatures <- GET(audioFeaturesURL, add_headers(Authorization = HeaderValue))
audioFeatures <- jsonlite::fromJSON(toJSON(content(getaudioFeatures)))
answer <- unlist(audioFeatures$response$artist$twitter_name, use.names=FALSE)
answer1 <- ifelse(is.null(answer), "No Twitter Name", answer)
final1[i,8] <- answer1
}
source('~/website/spotify rscript1.R', echo=TRUE)
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
library(qpcR)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
source('~/website/spotify rscript1.R', echo=TRUE)
source('~/website/spotify rscript1.R', echo=TRUE)
