colnames(newdf2)[1]<-"Songs"
##DUMMY DATAFRAME
text = c("This is neutral")
Col2 = 0
Col3 = 0
Col4 = 0
Col5 = 0
Col6 = 0
Col7 = 0
Col8 = 0
Col9 = 0
Col10 = 0
Col11 = 0
Col12 = 0
Col13 = 0
Col14 = 0
Col15 = 0
Col16 = 0
df = data.frame(text, Col2, Col3, Col4, Col5, Col6, Col7, Col8, Col9, Col10, Col11, Col12, Col13, Col14, Col15, Col16)
for(i in 1:length(newdf1[,1])) {
newdf <- searchTwitter(as.character(newdf1[i,1]), n=1000)
twitterdf <- if(length(newdf)==0) {df} else {twListToDF(newdf)}
twitterdf <- select(twitterdf, text)
twitterdf <- unique(twitterdf)
twitterdf$filtered = gsub("&amp", "", twitterdf$text)
twitterdf$filtered = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "", twitterdf$filtered)
twitterdf$filtered = gsub("@\\w+", "", twitterdf$filtered)
twitterdf$filtered = gsub("[[:punct:]]", "", twitterdf$filtered)
twitterdf$filtered = gsub("[[:digit:]]", "", twitterdf$filtered)
twitterdf$filtered = gsub("http\\w+", "", twitterdf$filtered)
twitterdf$filtered = gsub("[ \t]{2,}", "", twitterdf$filtered)
twitterdf$filtered = gsub("^\\s+|\\s+$", "", twitterdf$filtered)
twitterdf$filtered <- sapply(twitterdf$filtered,function(row) iconv(row, "latin1", "ASCII", sub=""))
twitterdf$filtered <- sapply(newdf2$Songs,function(w) twitterdf$filtered <<- gsub(paste0(w,"|",tolower(w)),"it",twitterdf$filtered))
testing<-data.frame(twitterdf$filtered)
testing1<-data.frame(testing[,ncol(testing)])
colnames(testing1)[1]<-"Tweets"
testing1$Tweets<-as.character(testing1$Tweets)
testing1$sentiment1<-data.frame(get_sentiment(testing1[,1]))
answer1<-mean(testing1$sentiment1$get_sentiment.testing1...1..)
newdf1[i,2] <- answer1
}
withsentiment <- left_join(final2,newdf1,by=c("Primary_Artist1"="unique.final2...6.."))
sentiment_filtered <- select(withsentiment, NAME, `ARTIST NAME`, `Genius Lyrics Link`,V8, V2)
colnames(sentiment_filtered)[5] <- "Recent Twitter Sentiment"
colnames(sentiment_filtered)[4] <- "Twitter Name"
sentiment_filtered$`Recent Twitter Sentiment`<-as.numeric(sentiment_filtered$`Recent Twitter Sentiment`)
write_csv(sentiment_filtered,"testing.csv")
library(readr)
write_csv(sentiment_filtered,"testing.csv")
View(sentiment_filtered)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/website/r-projects")
#render your sweet site.
rmarkdown::render_site()
View(sentiment_filtered)
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
```
```{r, echo=FALSE, include=FALSE}
new_releases<-read_csv("testing.csv")
new_releases<-new_releases[order(-new_releases$`Recent Twitter Sentiment`),]
new_releases$`Recent Twitter Sentiment`<-percent(new_releases$`Recent Twitter Sentiment`)
new_releases$New_Link <- paste0("<a href='",new_releases$`Genius Lyrics Link`,"' target='_blank'>",new_releases$`Genius Lyrics Link`,"</a>")
new_releases<-new_releases[,-3]
colnames(new_releases)[5]<-"Genius Lyrics Link"
colnames(new_releases)[1]<-"Track Name"
colnames(new_releases)[2]<-"Artist Name"
colnames(new_releases)[3]<-"Twitter Handle"
colnames(new_releases)[4]<-"Recent Tweet Sentiment About Artist"
View(new_releases)
getwd()
setwd("C:/Users/nickk/OneDrive/Documents/website/r-projects")
write_csv(sentiment_filtered,"testing.csv")
new_releases<-read_csv("testing.csv")
View(new_releases)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/website/r-projects")
#render your sweet site.
rmarkdown::render_site()
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
View(final)
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
View(final1)
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
View(final1)
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
library(httr)
library(jsonlite)
library(DT)
library(dplyr)
library(twitteR)
library(syuzhet)
library(scales)
library(readr)
spotifyKey <- "c432b36c21724d2989baf7d4d8a6bfd3"
spotifySecret <- "047d74d4926c44ec8681c236d702dff9"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
View(final1)
spotifyKey <- "741eb6cffc374742acb6168f2705f48e"
spotifySecret <- "e8a22a3ac2c34f1ebbdf1f14578dcd32"
response = POST(
'https://accounts.spotify.com/api/token',
accept_json(),
authenticate(spotifyKey, spotifySecret),
body = list(grant_type = 'client_credentials'),
encode = 'form',
verbose()
)
token = content(response)$access_token
HeaderValue = paste0('Bearer ', token)
new_releases_url <- "https://api.spotify.com/v1/browse/new-releases"
getNewReleases <- GET(new_releases_url, add_headers(Authorization = HeaderValue))
newReleasesContent <- jsonlite::fromJSON(toJSON(content(getNewReleases)))
newreleases<-data.frame(matrix(unlist(newReleasesContent$albums$items$id),
nrow=newReleasesContent$albums$total, byrow=T),stringsAsFactors=FALSE)
##spotify<-newreleases[1:30,]
spotify<-unique(newreleases[,1])
get.tracks <- function(spotify){
albumTracksURL <- paste("https://api.spotify.com/v1/albums/", spotify, "/tracks?limit=50", sep="")
getTracks <- GET(albumTracksURL, add_headers(Authorization = HeaderValue))
albumTracks <- jsonlite::fromJSON(toJSON(content(getTracks)))
ids <- data.frame(matrix(unlist(albumTracks$items$id),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
names <- data.frame(matrix(unlist(albumTracks$items$name),
nrow=albumTracks$total, byrow=T),stringsAsFactors=FALSE)
artists<-albumTracks$items$artists
artists1<-do.call(rbind, lapply(artists, function(x) do.call(cbind, lapply(x[c('id', 'name')], toString))))
result <- cbind(ids, names, artists1)
colnames(result) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
return(result)
}
df <- lapply(spotify, get.tracks)
result <- do.call(rbind, df)
result_final<-result
names(result_final) <- c("ID", "NAME", "ARTIST ID", "ARTIST NAME")
final<-result_final
final1<-final[!duplicated(final), ]
View(final1)
